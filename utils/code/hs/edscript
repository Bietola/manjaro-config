#!/bin/sh

# Parse flags
GO_TO_DIR=0
while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -d | --dir )
    GO_TO_DIR=1
    ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

usage() {
    echo "Usage: edscript [-d/--dir] [SCRIPT_NAME]"

    exit 1
}

[[ $# -gt 1 ]] && usage

STACK_PROJ_SRC="./stack-proj/src"

# Use fzf to get script name if it isn't provided
if [[ $# -eq 0 ]]; then
    SCRIPT_NAME=$(\
        find "$STACK_PROJ_SRC" -type f -name *.hs -print0 |\
        xargs -0 -n1 basename |\
        awk -F. '{print $1}' |\
        fzf \
    )

    if [[ -z $SCRIPT_NAME ]]; then
        echo "Please choose script to continue"
        exit 1
    fi
else
    SCRIPT_NAME="$1"
fi

SCRIPT_DIR="$STACK_PROJ_SRC/$SCRIPT_NAME"

if [[ ! -e "$SCRIPT_DIR" ]]; then
    echo "$SCRIPT_NAME does not exist in $SCRIPT_DIR"

    exit 1
fi

# NB. Needed so that HLS picks up the stack project things
cd $SCRIPT_DIR

if [[ $GO_TO_DIR -eq 0 ]]; then
    # NB. sudo is needed for weird stack ownership reasons
    sudo $EDITOR "$SCRIPT_NAME.hs"
else
    # This clipboard indirect method is emplyed because `cd` only works on the subshell of the script...
    command -v xclip &>/dev/null \
        || { echo "Please install xclip to continue"; exit 1; }

    echo "cd $SCRIPT_DIR" | xclip -selection clipboard
    echo "\`cd\` command to script directory placed in clipboard!"
fi
